<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.testingedu.demos.handler.handler_titan.UserAModelMapperTiTan">

    <!--<select id="getClassListByTeacher" parameterType="String" resultType="java.util.Map">-->
        <!--SELECT-->
            <!--ug.id ,-->
            <!--ug.name ,-->
            <!--ug.create_at createAt-->
        <!--FROM-->
            <!--user_group ug-->
        <!--JOIN user u ON u.id = ug.owner_id-->
        <!--AND u.username = #{teacherName}-->
    <!--</select>-->

    <!--<select id="getUserByClassId" parameterType="Long" resultType="java.util.Map">-->
        <!--SELECT-->
            <!--u.id id,-->
            <!--u.username userName,-->
            <!--u.real_name realName,-->
            <!--u.create_at createAt-->
        <!--FROM-->
            <!--user u-->
        <!--WHERE-->
            <!--u.id IN(-->
                <!--SELECT-->
                    <!--user_id-->
                <!--FROM-->
                    <!--user_group_member ugm-->
                <!--WHERE-->
                    <!--ugm.group_id = #{classId}-->
                <!--AND ugm.type = 'MEMBER'-->
            <!--)-->
    <!--</select>-->

    <!--<select id="getUserTypeByUserName" parameterType="java.lang.String" resultType="java.lang.String">-->
        <!--SELECT-->
            <!--type-->
        <!--FROM-->
            <!--user-->
        <!--WHERE-->
            <!--userName=#{userName}-->
    <!--</select>-->
    <!--<select id="getOwnerIdByClassId" parameterType="java.lang.Long" resultType="java.lang.Long">-->
        <!--SELECT-->
            <!--owner_id-->
        <!--FROM-->
            <!--user_group-->
        <!--WHERE-->
            <!--id = #{classId}-->
    <!--</select>-->

    <!--<select id="getUserIdByName" parameterType="java.lang.String" resultType="java.lang.Long">-->
        <!--SELECT-->
            <!--id-->
        <!--FROM-->
            <!--user-->
        <!--WHERE-->
            <!--username = #{userName}-->
    <!--</select>-->

    <!--<update id="updateUserGroupByClassId" parameterType="java.util.HashMap">-->
        <!--UPDATE user_group ug-->
        <!--SET ug.owner_id = #{newUserId}-->
        <!--WHERE-->
            <!--id = #{classId}-->
    <!--</update>-->

    <!--<update id="updateUserGroupMember" parameterType="java.util.HashMap">-->
        <!--UPDATE user_group_member ugm-->
        <!--SET ugm.user_id = #{newUserId} ,-->
        <!--ugm.type = 'OWNER'-->
        <!--WHERE-->
        <!--ugm.group_id = #{classId}-->
        <!--AND(-->
        <!--ugm.user_id = #{oldUserId}-->
        <!--OR ugm.type = 'OWNER'-->
        <!--)-->
    <!--</update>-->

    <!--<insert id="insertUserGroupMember" parameterType="java.util.HashMap">-->
        <!--INSERT INTO user_group_member(group_id , user_id , type)-->
        <!--VALUES-->
            <!--(#{classId},#{userId}, #{type})-->
    <!--</insert>-->

    <!--<select id="selectUserGroupMember" parameterType="java.util.HashMap" resultType="java.lang.Integer">-->
        <!--SELECT-->
            <!--count(1)-->
        <!--FROM-->
            <!--user_group_member-->
        <!--WHERE-->
            <!--group_id = #{classId}-->
        <!--AND user_id = #{userId}-->
        <!--AND type = #{type}-->
    <!--</select>-->

    <!--<delete id="deleteUserGroupMember" parameterType="java.util.HashMap">-->
        <!--DELETE-->
        <!--FROM-->
            <!--user_group_member-->
        <!--WHERE-->
            <!--group_id = #{classId}-->
        <!--AND user_id = #{userId}-->
        <!--AND type = #{type}-->
    <!--</delete>-->

    <!--<delete id="deleteUserGroupAllMember" parameterType="java.lang.Long">-->
        <!--DELETE-->
        <!--FROM-->
          <!--user_group_member-->
        <!--WHERE-->
          <!--group_id = #{classId}-->
    <!--</delete>-->

    <!--<update id="deleteUserGroupOwner" parameterType="java.util.Map">-->
         <!--UPDATE-->
           <!--user_group-->
         <!--SET-->
           <!--owner_id = NULL-->
          <!--WHERE-->
            <!--id = #{classId}-->
          <!--AND-->
            <!--owner_id = #{userId}-->
    <!--</update>-->

    <!--<insert id="insertUserGroupMemberTrack" parameterType="java.util.HashMap">-->
        <!--INSERT INTO user_group_member_track (group_id, user_id)-->
        <!--VALUES-->
            <!--(#{classId},#{userId})-->
    <!--</insert>-->

    <!--<update id="updateUserGroupMemberTrackIn" parameterType="java.util.HashMap">-->
        <!--UPDATE user_group_member_track-->
          <!--SET in_time = NOW()-->
        <!--WHERE-->
            <!--group_id = #{classId}-->
        <!--AND user_id = #{userId}-->
    <!--</update>-->

    <!--<update id="updateUserGroupMemberTrackOut" parameterType="java.util.HashMap">-->
        <!--UPDATE user_group_member_track-->
        <!--SET out_time = NOW()-->
        <!--WHERE-->
        <!--group_id = #{classId}-->
        <!--AND user_id = #{userId}-->
    <!--</update>-->

    <!--<insert id="insertUserGroupMemberTrackOut" parameterType="java.util.HashMap">-->
        <!--INSERT INTO user_group_member_track (group_id, user_id,out_time)-->
        <!--VALUES-->
        <!--(#{classId},#{userId},NOW())-->
    <!--</insert>-->

    <!--<select id="selectUserIsVip" parameterType="java.lang.Long" resultType="java.lang.Integer">-->
        <!--SELECT-->
            <!--count(1)-->
        <!--FROM-->
            <!--namespace_has_user-->
        <!--WHERE-->
            <!--namespace_id = 13273-->
        <!--AND user_id = #{userId};-->
    <!--</select>-->

    <!--<select id="getStudentIdByUserName" parameterType="String" resultType="java.util.Map">-->
        <!--SELECT-->
            <!--id,-->
            <!--username userName,-->
            <!--real_name realName,-->
            <!--create_at createAt-->
        <!--FROM-->
            <!--user-->
        <!--WHERE-->
            <!--username = #{userName}-->
        <!--AND type = 'STUDENT'-->
    <!--</select>-->

    <!--<select id="selectSchoolIdByName" parameterType="String" resultType="java.lang.Long">-->
        <!--SELECT-->
            <!--id-->
        <!--FROM-->
            <!--region-->
        <!--WHERE-->
            <!--NAME = #{schoolName}-->
    <!--</select>-->

    <!--<insert id="insertSchool" parameterType="boxfish.mybatis.springboot.model.Region">-->
        <!--<selectKey keyProperty="id" resultType="long">-->
          <!--SELECT LAST_INSERT_ID()-->
        <!--</selectKey>-->
        <!--INSERT INTO region (NAME, summary)-->
        <!--VALUES-->
            <!--(#{schoolName}, date_format(NOW(),'%Y%m%d'))-->
    <!--</insert>-->

    <!--<insert id="insertNameSpaceForRegion" parameterType="boxfish.mybatis.springboot.model.Region">-->
        <!--INSERT INTO namespace (-->
            <!--name,-->
            <!--open,-->
            <!--param,-->
            <!--summary,-->
            <!--type,-->
            <!--version,-->
            <!--create_at,-->
            <!--locked,-->
            <!--update_at-->
        <!--)-->
        <!--VALUES-->
            <!--(-->
                <!--#{schoolName},-->
                <!--0,-->
                <!--#{id},-->
                <!--date_format(NOW(),'%Y%m%d'),-->
                <!--'SCHOOL',-->
                <!--0,-->
                <!--NOW(),-->
                <!--0,-->
                <!--NOW()-->
            <!--)-->
    <!--</insert>-->

    <!--<select id="selectClassIdByRegion" parameterType="boxfish.mybatis.springboot.model.Region" resultType="java.lang.Long">-->
        <!--SELECT-->
            <!--b.id-->
        <!--FROM-->
            <!--user a,-->
            <!--user_group b-->
        <!--WHERE-->
            <!--a.id = b.owner_id-->
        <!--AND a.username = #{userName}-->
        <!--AND b.`name` = #{className}-->
    <!--</select>-->

    <!--<insert id="insertClassForRegion" parameterType="boxfish.mybatis.springboot.model.Region">-->
        <!--<selectKey keyProperty="classId" resultType="long">-->
            <!--SELECT LAST_INSERT_ID()-->
        <!--</selectKey>-->
        <!--INSERT INTO user_group (-->
            <!--name,-->
            <!--region_id,-->
            <!--create_at,-->
            <!--update_at-->
        <!--)-->
        <!--VALUES-->
            <!--(#{className}, #{id}, NOW(), NOW())-->
    <!--</insert>-->


    <!--<insert id="insertNameSpaceForClass" parameterType="boxfish.mybatis.springboot.model.Region">-->
        <!--INSERT INTO namespace (-->
            <!--name,-->
            <!--open,-->
            <!--param,-->
            <!--summary,-->
            <!--type,-->
            <!--version,-->
            <!--create_at,-->
            <!--locked,-->
            <!--update_at-->
        <!--)-->
        <!--VALUES-->
        <!--(-->
            <!--#{className},-->
            <!--0,-->
            <!--#{classId},-->
            <!--date_format(NOW(),'%Y%m%d'),-->
            <!--'CLASS',-->
            <!--0,-->
            <!--NOW(),-->
            <!--0,-->
            <!--NOW()-->
        <!--)-->
    <!--</insert>-->

    <!--<select id="selectUserIdByRegion" parameterType="boxfish.mybatis.springboot.model.Region" resultType="java.lang.Long">-->
        <!--SELECT-->
            <!--id-->
        <!--FROM-->
            <!--user-->
        <!--WHERE-->
            <!--username = #{userName}-->
    <!--</select>-->

    <!--<insert id="insertUserForRegion" parameterType="boxfish.mybatis.springboot.model.Region">-->
        <!--<selectKey keyProperty="userId" resultType="long">-->
            <!--SELECT LAST_INSERT_ID()-->
        <!--</selectKey>-->
        <!--INSERT INTO user (-->
            <!--username,-->
            <!--real_name,-->
            <!--PASSWORD,-->
            <!--lastUploaded,-->
            <!--create_at,-->
            <!--region_id,-->
            <!--max_number_of_devices,-->
            <!--requirepasswordchange,-->
            <!--type,-->
            <!--catalog-->
        <!--)-->
        <!--VALUES-->
        <!--(-->
            <!--#{userName},-->
            <!--#{realName},-->
            <!--'123456',-->
            <!--UNIX_TIMESTAMP(NOW()),-->
            <!--NOW(),-->
            <!--#{id},-->
            <!--10,-->
            <!--1,-->
            <!--#{userType},-->
            <!--'初中'-->
        <!--)-->
    <!--</insert>-->

    <!--<select id="selectNameSpaceIdForRegion" parameterType="boxfish.mybatis.springboot.model.Region" resultType="java.lang.Long">-->
        <!--SELECT-->
            <!--id-->
        <!--FROM-->
            <!--namespace-->
        <!--WHERE-->
            <!--type = 'SCHOOL'-->
        <!--AND param = #{id}-->
    <!--</select>-->

    <!--<select id="selectNameSpaceIdForClass" parameterType="java.lang.Long" resultType="java.lang.Long">-->
        <!--SELECT-->
            <!--id-->
        <!--FROM-->
            <!--namespace-->
        <!--WHERE-->
            <!--type = 'CLASS'-->
        <!--AND param = #{classId}-->
    <!--</select>-->

    <!--<insert id="insertNameSpaceHasUserForRegion" parameterType="boxfish.mybatis.springboot.model.Region">-->
        <!--INSERT namespace_has_user (-->
            <!--version,-->
            <!--namespace_id,-->
            <!--user_id,-->
            <!--create_at-->
        <!--)-->
        <!--VALUES-->
            <!--(-->
            <!--0,-->
            <!--#{nameSpaceId},-->
            <!--#{userId},-->
            <!--NOW()-->
            <!--)-->
    <!--</insert>-->

    <!--<update id="updateNameSpaceHasUser" parameterType="java.util.HashMap">-->
        <!--UPDATE-->
            <!--namespace_has_user-->
        <!--SET-->
            <!--user_id = #{newUserId}-->
        <!--WHERE-->
            <!--namespace_id=#{namespaceId} AND  user_id=#{oldUserId}-->
    <!--</update>-->

    <!--<insert id="insertUserQuota" parameterType="java.util.HashMap">-->
        <!--INSERT INTO user_quota (user_id, quota_value, quota_key)-->
        <!--VALUES-->
            <!--(#{userId}, #{value}, #{key})-->
    <!--</insert>-->

    <!--<insert id="insertUserHasPerm" parameterType="boxfish.mybatis.springboot.model.Region">-->
        <!--INSERT INTO user_has_perm-->
          <!--(user_id,-->
          <!--permission)-->
        <!--VALUES-->
            <!--(-->
            <!--#{userId},-->
            <!--lower(#{userType})-->
            <!--)-->
    <!--</insert>-->

    <!--<select id="selectNameSpaceHasUser" parameterType="boxfish.mybatis.springboot.model.Region" resultType="java.lang.Integer">-->
        <!--SELECT-->
            <!--COUNT(1)-->
        <!--FROM-->
            <!--namespace_has_user-->
        <!--WHERE-->
            <!--namespace_id = #{nameSpaceId}-->
        <!--AND user_id = #{userId}-->
    <!--</select>-->

    <!--<select id="selectUserHasPerm" parameterType="boxfish.mybatis.springboot.model.Region" resultType="java.lang.Integer">-->
        <!--SELECT-->
            <!--COUNT(1)-->
        <!--FROM-->
            <!--user_has_perm-->
        <!--WHERE-->
            <!--permission = lower(#{userType})-->
        <!--AND user_id = #{userId}-->
    <!--</select>-->

    <!--<select id="selectUserRelationship" parameterType="java.util.HashMap" resultType="java.lang.Integer">-->
        <!--SELECT-->
            <!--COUNT(1)-->
        <!--FROM-->
            <!--user_relationship-->
        <!--WHERE-->
            <!--source_id = #{relationOne}-->
        <!--AND target_id = #{relationTwo}-->
    <!--</select>-->

    <!--<insert id="insertUserRelationship" parameterType="java.util.HashMap">-->
        <!--INSERT INTO user_relationship (-->
            <!--source_id,-->
            <!--target_id,-->
            <!--create_at,-->
            <!--update_at-->
        <!--)-->
        <!--VALUES-->
            <!--(#{relationOne},#{relationTwo}, NOW(), NOW())-->
    <!--</insert>-->

    <!--<update id="deleteUserRelationship" parameterType="java.util.HashMap">-->
        <!--DELETE FROM user_relationship-->
        <!--WHERE source_id=#{relationOne} AND target_id=#{relationTwo}-->
    <!--</update>-->

    <!--<select id="selectUserMesScore" parameterType="boxfish.mybatis.springboot.model.Region" resultType="java.util.HashMap">-->
        <!--SELECT-->
            <!--a.id userId,-->
            <!--a.access_token accessToken,-->
            <!--a.username userName,-->
            <!--a.real_name realName,-->
            <!--a.nickname nickName,-->
            <!--CASE a.type-->
            <!--WHEN 'TEACHER' THEN-->
                <!--'老师'-->
            <!--WHEN 'STUDENT' THEN-->
                <!--'学生'-->
            <!--ELSE-->
                <!--'未知'-->
            <!--END userType,-->
            <!--a.create_at createAt,-->
            <!--CASE-->
            <!--WHEN b.sum_score IS NULL THEN-->
                <!--0-->
            <!--ELSE-->
                <!--b.sum_score-->
            <!--END sumScore-->
        <!--FROM-->
            <!--USER a-->
        <!--LEFT JOIN user_score b ON a.id = b.user_id-->
        <!--WHERE-->
            <!--1 = 1-->
            <!--<if test="userName != null and userName != '' ">-->
                <!--AND a.username = #{userName}-->
            <!--</if>-->
            <!--<if test="realName != null and realName != '' ">-->
                <!--AND a.real_name LIKE '${realName}%'-->
            <!--</if>-->
            <!--<if test="userId != null and userId != '' ">-->
                <!--AND a.id = #{userId}-->
            <!--</if>-->
            <!--<if test="nickName != null and nickName != '' ">-->
                <!--AND a.nickName like '${nickName}%'-->
            <!--</if>-->
            <!--<if test="sumScore1 != null and sumScore1 != '' ">-->
                <!--<![CDATA[-->
                <!--AND b.sum_score >= #{sumScore1}-->
              	 <!--]]>-->
            <!--</if>-->
            <!--<if test="sumScore2 != null and sumScore2 != '' ">-->
                <!--<![CDATA[-->
                <!--AND b.sum_score <= #{sumScore2}-->
                 <!--]]>-->
            <!--</if>-->
    <!--</select>-->


    <!--<select id="selectClassScore" resultType="java.util.Map">-->
            <!--SELECT-->
                <!--u.id id,-->
                <!--u.username userName,-->
                <!--u.real_name realName,-->
                <!--u.create_at createAt,-->
                <!--ROUND(us.sum_score) sumScore,-->
                <!--ROUND(a.interval_score) intervalScore-->
            <!--FROM-->
                <!--USER u-->
            <!--LEFT JOIN user_score us ON u.id = us.user_id-->
            <!--LEFT JOIN (-->
                <!--SELECT-->
                    <!--user_id,-->
                    <!--sum(score) interval_score-->
                <!--FROM-->
                    <!--user_score_day-->
                <!--WHERE-->
                    <!--user_id IN (-->
                        <!--SELECT-->
                        <!--user_id-->
                        <!--FROM-->
                        <!--user_group_member ugm-->
                        <!--WHERE-->
                        <!--ugm.group_id = #{classId}-->
                        <!--AND ugm.type = 'MEMBER'-->
                        <!--)-->
            <!--<if test="startTime != null and startTime != '' ">-->
                <!--<![CDATA[-->
                <!--AND date >= #{startTime}-->
                <!--]]>-->
            <!--</if>-->

            <!--<if test="endTime != null and endTime != '' ">-->
                <!--<![CDATA[-->
                <!--AND date <= #{endTime}-->
                <!--]]>-->
            <!--</if>-->

                <!--GROUP BY-->
                    <!--user_id-->
            <!--) a ON u.id = a.user_id-->
            <!--WHERE-->
                <!--u.id IN (-->
                    <!--SELECT-->
                        <!--user_id-->
                    <!--FROM-->
                        <!--user_group_member ugm-->
                    <!--WHERE-->
                        <!--ugm.group_id = #{classId}-->
                    <!--AND ugm.type = 'MEMBER'-->
                <!--)-->
    <!--</select>-->
    <!--<select id="getTeacherGroupId" resultType="java.lang.String">-->
        <!--SELECT-->
            <!--group_id-->
        <!--FROM-->
            <!--user_group_member-->
        <!--WHERE-->
            <!--user_id = (-->
                <!--SELECT-->
                    <!--id-->
                <!--FROM-->
                    <!--USER-->
                <!--WHERE-->
                    <!--username = #{username}-->
            <!--)-->
        <!--AND type = 'OWNER'-->
    <!--</select>-->
    <!--<select id="getStudentGroupId" resultType="java.lang.String">-->
        <!--SELECT-->
            <!--group_id-->
        <!--FROM-->
            <!--user_group_member-->
        <!--WHERE-->
            <!--user_id = (-->
                <!--SELECT-->
                    <!--id-->
                <!--FROM-->
                    <!--USER-->
                <!--WHERE-->
                    <!--username = #{username}-->
            <!--)-->
        <!--AND type = 'MEMBER'-->

    <!--</select>-->
    <select id="selectByPrimaryKey" resultType="java.util.Map">
        SELECT
          id,
          name,
          pwd
        FROM
          demo_info
        LIMIT
          1
    </select>

    <select id="saveOne" resultType="java.lang.Integer">
        INSERT INTO `demo_info` (name,`pwd`,`state`) values('syj1','222',0),('syj2','333',1)
    </select>

    <select id="selectAll" parameterType="com.testingedu.demos.page.BaseEntity" resultType="java.util.HashMap">
        SELECT id,name,pwd,state FROM demo_info
    </select>



</mapper>