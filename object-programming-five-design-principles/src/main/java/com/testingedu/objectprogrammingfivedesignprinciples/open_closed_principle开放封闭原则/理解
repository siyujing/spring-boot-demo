使用 开放封闭原则 办理银行业务
该方法种包含 银行 银行业务 客户
银行的业务同一时间有多种可能，所以把银行的业务抽象出来一个接口，便于业务扩展。
抽象的业务接口（IBankProcess）提供一个可实现的抽象的业务方法以供实现类实现（ Process() ）。
按业务类型不同创建不同的业务类，并通过实现接口（IBankProcess），实现接口的方法来创建业务。
创建用户类（Client），通过方法（CreateProcess）根据用户不同的业务需求返回业务类。
创建具体的银行类，银行类有一个属性表示要处理的业务，该属性的类型是抽象的接口类（IBankProcess），通过创建的客户类型来创建不同的业务，并处理业务。


关于开放封闭原则，其核心的思想是：
软件实体应该是可扩展，而不可修改的。也就是说，对扩展是开放的，而对修改是封闭的。
实现开放封闭的核心思想就是对抽象编程，而不对具体编程，因为抽象相对稳定。让类依赖于固定的抽象，所以对修改就是封闭的；而通过面向对象的继承和对多态机制，可以实现对抽象体的继承，通过覆写其方法来改变固有行为，实现新的扩展方法，所以对于扩展就是开放的。